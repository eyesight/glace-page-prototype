{"version":3,"sources":["1_settings/_fonts.scss","0_reset/_reset.scss","style.css","4_basics/_basics.scss","3_mixins/_type-face.scss","3_mixins/_typography.scss","3_mixins/_breakpoints.scss","4_basics/_helper-classes.scss","4_basics/_responsive-embed.scss","3_mixins/_responsive-ratio.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;700&family=Satisfy&display=swap');\n\n// TYPE-FACE SETTINGS\n$type-face: 'Noto Sans', sans-serif !default;\n$type-face-write: 'Satisfy', cursive !default;\n\n$font-weight-regular: 400 !default;\n$font-weight-bold: 700 !default;\n\n// FONT-SIZE SETTINGS\n$font-settings-body: (\n    null: (1.6rem, 2.5rem),\n    md: (1.8rem, 2.6rem)\n) !default;\n\n$font-settings-h1: (\n    null: (1.6rem, 2.5rem),\n    md: (1.8rem, 2.6rem)\n) !default;\n\n$font-settings-h2: (\n    null: (1.6rem, 2.5rem),\n    md: (1.8rem, 2.6rem)\n) !default;","/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n*, *:before, *:after{\n  box-sizing: border-box;\n  position: relative;\n}\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/*\n  Gets rid of the annoying outline for mouse users but preserves it for keyboard users, and is ignored by browsers that don’t support :focus-visible.\n  @Link: https://twitter.com/LeaVerou/status/1045768279753666562\n */\n:focus:not(:focus-visible) {\n  outline: none;\n}\n\n.sr {\n  position: absolute;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  clip-path: inset(100%);\n  white-space: nowrap;\n}\n\n.no-tab{\n  *:focus{\n    outline: 0;\n    box-shadow: none;\n  }\n}\n\n/* clears the 'X' from Internet Explorer */\ninput[type=search]::-ms-clear {  display: none; width : 0; height: 0; }\ninput[type=search]::-ms-reveal {  display: none; width : 0; height: 0; }\n\n/* clears the 'X' from Chrome */\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration { display: none; }\n","@charset \"UTF-8\";\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n@import url(\"https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;700&family=Satisfy&display=swap\");\n*, *:before, *:after {\n  box-sizing: border-box;\n  position: relative; }\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n/*\n  Gets rid of the annoying outline for mouse users but preserves it for keyboard users, and is ignored by browsers that don’t support :focus-visible.\n  @Link: https://twitter.com/LeaVerou/status/1045768279753666562\n */\n:focus:not(:focus-visible) {\n  outline: none; }\n\n.sr {\n  position: absolute;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  clip-path: inset(100%);\n  white-space: nowrap; }\n\n.no-tab *:focus {\n  outline: 0;\n  box-shadow: none; }\n\n/* clears the 'X' from Internet Explorer */\ninput[type=search]::-ms-clear {\n  display: none;\n  width: 0;\n  height: 0; }\n\ninput[type=search]::-ms-reveal {\n  display: none;\n  width: 0;\n  height: 0; }\n\n/* clears the 'X' from Chrome */\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration {\n  display: none; }\n\n/*\n  The higher in list, the higher the z-index\n  Usage: z-index: z('overlay')\n  More information: https://engageinteractive.co.uk/blog/top-10-scss-mixins#z-index\n*/\n/*\n  HELPER MIXINS (do not use)\n*/\n/*\n  Usage:\n  @include xs-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include sm-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include md-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include xs-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include sm-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include md-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include lg-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include between(sm, md) {\n\n  }\n*/\n/*\n  HELPER MIXINS (do not use)\n*/\n/*\n * Helper Mixin for Layout Mixins to have one movile breakpoint\n */\n/*\n  Usage:\n  @include font-size(font-settings-variable);\n*/\n/*\n  HELPER MIXINS (do not use)\n*/\n/*\n  Usage:\n  @include spacing(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-top-bottom(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-top(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-bottom(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-left-right(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-left(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-right(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include vertical-align-middle(position, width);\n*/\n/*\n  Usage:\n  @include vertical-align(position);\n*/\n/*\n  Usage:\n  @include font(typeface, font-weight, font-style);\n*/\n/*\n  Usage:\n  @include clearfix();\n*/\n/*\n  Usage:\n  @include responsive-ratio(width%, ratiowidth, ratioheight, 'childelement as string');\n*/\n/*\n  Usage:\n  @include size(width unit, height unit);\n*/\n/*\n  Usage:\n  @include flexbox(direction, wrap, justify-content, align-content);\n*/\nhtml {\n  font-size: 62.5%;\n  width: 100%; }\n\nbody {\n  font-family: \"Noto Sans\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  font-smoothing: antialiased;\n  font-smoothing: grayscale;\n  font-size: 1.6rem;\n  line-height: 2.5rem;\n  color: #000000; }\n  @media screen and (min-width: 768px) {\n    body {\n      font-size: 1.8rem;\n      line-height: 2.6rem; } }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\nh1,\nh2,\nh3,\nh4 {\n  font-family: \"Noto Sans\", sans-serif;\n  font-weight: 700;\n  font-style: normal;\n  font-smoothing: antialiased;\n  font-smoothing: grayscale; }\n\nh1 {\n  font-size: 1.6rem;\n  line-height: 2.5rem; }\n  @media screen and (min-width: 768px) {\n    h1 {\n      font-size: 1.8rem;\n      line-height: 2.6rem; } }\n\nh2 {\n  font-size: 1.6rem;\n  line-height: 2.5rem; }\n  @media screen and (min-width: 768px) {\n    h2 {\n      font-size: 1.8rem;\n      line-height: 2.6rem; } }\n\nh3,\nh4,\nh5,\nh6 {\n  font-size: 1.6rem;\n  line-height: 2.5rem; }\n  @media screen and (min-width: 768px) {\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-size: 1.8rem;\n      line-height: 2.6rem; } }\n\nimg {\n  max-width: 100%;\n  height: auto;\n  display: block; }\n  img.lazy {\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.4s ease; }\n  img.loaded {\n    opacity: 1;\n    visibility: visible; }\n\na {\n  text-decoration: none;\n  cursor: pointer;\n  color: #000000; }\n  a:hover, a:focus {\n    color: #000000;\n    text-decoration: none; }\n\nli {\n  list-style: none; }\n\n.screen-reader-text {\n  border: 0;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  word-wrap: normal !important; }\n\n.no-focus *:focus {\n  outline: 0;\n  box-shadow: none; }\n\nbutton {\n  border: none;\n  background: none; }\n\nbutton:focus {\n  outline: none; }\n\nfigure {\n  margin: 0; }\n\n.mobile-only {\n  display: none; }\n  @media (max-width: 767.98px) {\n    .mobile-only {\n      display: block; } }\n\n.desktop-only {\n  display: block; }\n  @media (max-width: 767.98px) {\n    .desktop-only {\n      display: none; } }\n\nstrong {\n  font-weight: 700; }\n\n.hidden {\n  display: none !important; }\n\n.responsive-embed {\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding: 56.25% 0 0 0;\n  display: block; }\n  .responsive-embed iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%; }\n","html {\n  font-size: 62.5%;\n  width: 100%;\n}\n\nbody {\n  @include font($type-face, $font-weight-regular);\n  @include font-size($font-settings-body);\n  color: $color-main-text;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nh1,\nh2,\nh3,\nh4 {\n  @include font($type-face, $font-weight-bold);\n}\n\nh1 {\n  @include font-size($font-settings-h1);\n}\n\nh2 {\n  @include font-size($font-settings-h2);\n}\n\nh3,\nh4,\nh5,\nh6 {\n  @include font-size($font-settings-body);\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  display: block;\n\n  &.lazy {\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.4s ease;\n  }\n\n  &.loaded {\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\na {\n  text-decoration: none;\n  cursor: pointer;\n  color: $color-main-text;\n\n  &:hover,\n  &:focus{\n    color: $color-main-text;\n    text-decoration: none;\n  }\n}\n\nli{\n  list-style: none;\n}\n\n.screen-reader-text {\n  border: 0;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  word-wrap: normal !important;\n}\n\n\n.no-focus {\n  *:focus {\n    outline: 0;\n    box-shadow: none;\n  }\n}\nbutton{\n  border: none;\n  background: none;\n}\nbutton:focus { \n  outline: none; \n}\n\nfigure{\n  margin: 0;\n}\n\n.mobile-only{\n  display: none;\n  @include sm-max(){\n    display: block;\n  }\n}\n\n.desktop-only{\n  display: block;\n  @include sm-max(){\n    display: none;\n  }\n}\n\nstrong{\n  font-weight: $font-weight-bold;\n}","/*\n  Usage:\n  @include font(typeface, font-weight, font-style);\n*/\n@mixin font($type-face: $type-face-body, $font-weight: $font-weight-regular, $font-style: normal) {\n  font-family: $type-face;\n  font-weight: $font-weight;\n  font-style: $font-style;\n  font-smoothing: antialiased;\n  font-smoothing: grayscale;\n}","/*\n  Usage:\n  @include font-size(font-settings-variable);\n*/\n@mixin font-size($fs-map: $font-settings-body, $fs-breakpoints: $layout-breakpoints) {\n  @each $fs-breakpoint, $fs-font-size in $fs-map {\n    @if $fs-breakpoint == null {\n      @include make-font-size($fs-font-size);\n    } @else if $fs-breakpoint == print {\n      @media print {\n        @include make-font-size($fs-font-size);\n      }\n    }\n    @else {\n      // If $fs-font-size is a key that exists in\n      // $fs-breakpoints, use the value\n      @if map-has-key($fs-breakpoints, $fs-breakpoint) {\n        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);\n      }\n      @media screen and (min-width: $fs-breakpoint) {\n        @include make-font-size($fs-font-size);\n      }\n    }\n  }\n}\n\n/*\n  HELPER MIXINS (do not use)\n*/\n@mixin make-font-size($fs-font-size) {\n  // If $fs-font-size is a list, include\n  // both font-size and line-height\n  @if type-of($fs-font-size) == \"list\" {\n    font-size: nth($fs-font-size, 1);\n    @if (length($fs-font-size) > 1) {\n      line-height: nth($fs-font-size, 2);\n    }\n  }\n  @else {\n    font-size: $fs-font-size;\n  }\n}","/*\n  HELPER MIXINS (do not use)\n*/\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $layout-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n\n/*\n  Usage:\n  @include xs-min() {\n\n  }\n*/\n@mixin xs-min() {\n  @include media-breakpoint-up(xs) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include sm-min() {\n\n  }\n*/\n@mixin sm-min() {\n  @include media-breakpoint-up(sm) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include md-min() {\n\n  }\n*/\n@mixin md-min() {\n  @include media-breakpoint-up(md) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n@mixin lg-min() {\n  @include media-breakpoint-up(lg) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n@mixin xl-min() {\n  @include media-breakpoint-up(xl) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include xs-max() {\n\n  }\n*/\n@mixin xs-max() {\n  @include media-breakpoint-down(xs) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include sm-max() {\n\n  }\n*/\n@mixin sm-max() {\n  @include media-breakpoint-down(sm) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include md-max() {\n\n  }\n*/\n@mixin md-max() {\n  @include media-breakpoint-down(md) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include lg-max() {\n\n  }\n*/\n@mixin lg-max() {\n  @include media-breakpoint-down(lg) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include between(sm, md) {\n\n  }\n*/\n@mixin between($min: null, $max: null) {\n  @include media-breakpoint-between($min, $max) {\n    @content;\n  }\n}\n\n/*\n  HELPER MIXINS (do not use)\n*/\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $layout-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n/*\n * Helper Mixin for Layout Mixins to have one movile breakpoint\n */\n @mixin layout-breakpoint(){\n  @media (min-width: $layout-breakpoint){\n    @content;\n  }\n}\n",".hidden {\n  display: none !important;\n}\n",".responsive-embed {\n  @include responsive-ratio();\n}","/*\n  Usage:\n  @include responsive-ratio(width%, ratiowidth, ratioheight, 'childelement as string');\n*/\n@mixin responsive-ratio($cw: 100%, $rw: 16, $rh: 9, $c: 'iframe') {\n  position: relative;\n  width: $cw;\n  height: 0;\n  padding: (($rh / $rw) * $cw) 0 0 0;\n  display: block;\n\n  @if $c != null {\n    #{$c} {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      width: 100%; \n      height: 100%;\n    }\n  }\n}\n\n@mixin responsive-ratio-center($cw: 100%, $rw: 16, $rh: 9, $c: 'iframe') {\n  position: relative;\n  width: $cw;\n  height: 0;\n  padding: (($rh / $rw) * $cw) 0 0 0;\n  display: block;\n\n  @if $c != null {\n    #{$c} {\n      position: absolute;\n      top: 50%;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      width: 100%; \n      height: auto;\n      transform: translateY(-50%)\n    }\n  }\n}\n"]}